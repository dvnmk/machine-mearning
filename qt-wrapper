;;

(defun qt-mouse-drag-digitizer (event)
"capture mouse event drag => list"
  (interactive "e")
  (let* ((pos-0 (event-start event))
	 (pos-1 (event-end event))
	 (pt1 (posn-x-y pos-0))
	 (pt2 (posn-x-y pos-1))
	 (dt (/ (- (posn-timestamp pos-1)
		   (posn-timestamp pos-0))
		1000.0)))
    (message "%s ->  %s wahrend %s" pt1 pt2 dt)
    (list (car pt1) (cdr pt1) (car pt2) (cdr pt2) dt)
    ))

(defun qt-mouse-drag (event)
  ""
  (interactive "e")
  (let* ((lst (qt-mouse-drag-digitizer event))
	(cmd (format "(drag-passiert '%s)" lst)))
    (2slime cmd)))


(defun qt-mouse-click-digitizer (event)
  (interactive "e")
  (let* ((pos-0 (event-start event))
	 (pt0 (posn-x-y pos-0))
	 (ts (posn-timestamp pos-0)))
    (message "%s at %s" pt0 ts)
    (list (car pt0) (cdr pt0) ts)))

(defun qt-mouse-click (event)
  (interactive "e")
  (let* ((lst (qt-mouse-click-digitizer event))
	 (cmd (format "(click-passiert '%s)" lst)))
    (2slime cmd)))


;; LOG

(668 169 636 351 1.1)(580 229 59490636)(491 120 470 319 1.778)(470 319 59501846)(470 319 59503225)(951 707 59505735)(951 707 59506545)(10 708 59508945)(10 23 59512435)(765 55 59514615)(714 41 452 436 1.208)(625 153 600 389 1.408)(567 198 555 387 0.849)(561 190 553 387 0.868)(533 184 551 373 0.688)

(defun mouse-start-rectangle (start-event)
  (interactive "e")
  (deactivate-mark)
  (mouse-set-point start-event)
  (rectangle-mark-mode +1)
  (let ((drag-event))
    (track-mouse
      (while (progn
               (setq drag-event (read-event))
               (mouse-movement-p drag-event))
        (mouse-set-point drag-event)))))

(global-set-key (kbd "S-<down-mouse-1>") #'mouse-start-rectangle)(205 558 381 367 0.794)(356 435 254 590 0.413)(306 341 245 488 0.36)(349 629 59747211)(286 536 59762880)




(211.0 415.5 211.0 414.0 0.0645)(399 812 31552524)(192.5 403.5 201.5 354.5 0.097)(215.5 396.5 215.0 334.0 0.147)(222.5 394.0 186.5 402.0 0.1045)(230.5 391.5 184.5 394.5 0.1755)(274.5 386.0 174.5 386.0 0.48)(264.0 384.0 152.5 391.5 0.128)(130.0 42.5 129.5 44.5 0.049)(299 370 31575509)(139 192 31580693)(42 1113 31583837)(601 1101 31585367)(154 208 31587039)(286.0 251.0 292.0 35.5 0.63)(136 424 31597375)(278 449 31626605)(614 807 31628045)(610 715 31629006)(603 803 31630423)(610 717 31631272)(94 93 31642543)(65 613 31645663)(326 449 31647793)(42.0 307.5 41.5 308.0 0.038)(269 444 31821860)(563 1085 31865959)(559 1088 31867135)(558 1087 31868373)(556 1090 31869461)(555 1091 31870405)(555 1091 31871389)(555 1092 31872521)(552 1093 31873405)(554 1090 31874539)(554 1090 31875484)(551 1092 31876525)(554 1090 31877426)(556 1090 31878445)(556 1097 31879413)(562 1096 31880441)(561 1098 31881393)(561 1099 31882339)(564 1095 31883591)(573 415 31900301)(165.0 362.0 164.5 363.5 0.041)(130 392 31903917)(493 324 31910367)(235 260 31913059)(167 902 31915129)(584 987 32283167)(573 991 32284055)(373 333 32435571)(120 897 32437341)(299.5 394.0 303.0 392.0 0.071)(613 701 33054991)(305.5 393.5 307.0 393.0 0.045)(618 710 33056595)(613 788 33057415)(614 712 33058449)(537 316 33059715)(201.0 314.5 200.5 315.0 0.03)(164.0 444.5 166.0 444.0 0.067)(554 791 33064875)(614 706 33065491)(551 790 33065971)(611 708 33066451)(555 787 33066907)(306.0 355.0 304.5 355.5 0.046)(276.0 395.5 277.5 394.0 0.038)(614 705 33068239)(250.0 164.5 248.5 162.5 0.0895)(211.0 162.0 209.5 160.5 0.063)(300 900 33080517)(515 533 33082467)(292 963 33083697)(167.0 416.0 173.0 299.0 0.202)(158.5 406.0 157.0 277.5 0.307)(147.5 405.0 148.5 314.5 0.274)(153.0 401.0 166.0 258.0 0.082)(153.0 177.5 155.0 410.5 0.116)(165.5 172.0 166.0 415.0 0.113)(579 1075 33103991)(218.5 328.5 218.5 329.0 0.06)(508 350 33108484)(80.0 184.5 81.0 184.0 0.079)(89 894 33148489)(35 63 35229403)(508 58 35232583)(500 455 35235095)(538 724 35236409)(253.5 446.5 254.5 369.0 0.2315)(547 692 35240631)(585 1078 35242483)(344 956 35244621)(198.0 218.0 57.0 222.5 0.121)(248 97 35553145)(66.0 176.5 67.0 176.5 0.041)(368 310 35559077)(160 877 35561139)(369 306 35563924)(244 878 35565699)(354 315 35567755)(222 902 35569473)(505 56 35916952)(502 457 35919922)(595 1085 35922032)(306 951 35924292)(212.5 260.5 141.5 265.5 0.109)(236 106 35970787)(137 388 35972535)(317 459 40849543)(68 372 40854877)

M-M> (time (progn (shot-local)
	    (shot-read)
	    (loch-finden-citi-f)))
Evaluation took:
  1.917 seconds of real time
  0.808021 seconds of total run time (0.775691 user, 0.032330 system)
  [ Run times consist of 0.011 seconds GC time, and 0.798 seconds non-GC time. ]
  42.15% CPU
  2,492,461,164 processor cycles
  20,665,104 bytes consed


M-M> (time (progn (shot-sym-down)
	    (shot-read)
	    (loch-finden-citi-f)))
Evaluation took:
  2.889 seconds of real time
  0.690775 seconds of total run time (0.659514 user, 0.031261 system)
  23.92% CPU
  3,755,886,392 processor cycles
  34,933,952 bytes consed(411 339 42151535)(247.5 41.5 246.5 42.0 0.068)(506 90 42153897)(507 90 42154985)(498 474 42156891)(584 1072 42159455)(318 964 42161511)(210.5 198.0 149.0 212.5 0.093)(124.5 39.5 127.0 39.0 0.0555)(157 392 42192055)(370 345 42262017)(229 893 42264439)(377 335 42330657)(110 893 42332847)(571 208 42637347)(142.0 322.5 141.5 324.0 0.049)(309 667 42809317)(80 893 42811185)(134.0 270.0 60.0 264.0 0.1115)(258 126 42998551)(57.5 212.0 56.5 214.0 0.0235)(482 89 43072113)(503 473 43074129)(588 1087 43076259)(279 956 43078173)(557 414 43082441)(320 706 43084427)(210.5 310.0 227.5 306.5 0.331)(121.5 34.5 121.5 35.0 0.053)(69.5 186.0 71.0 185.5 0.052)(498 87 43373169)(48.0 297.5 48.0 299.0 0.049)(296.5 544.5 296.5 542.5 0.067)(132.0 470.5 131.5 472.5 0.067)